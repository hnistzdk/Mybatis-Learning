<?xml version="1.0" encoding="UTF8" ?>
<!--究极之恶心的  如果xml文件的第一行的 encoding=UTF-8就会报错   改成UTF8才不会报错-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zdk.dao.TeacherMapper">
    <select id="getTeacher" resultType="teacher">
        select * from teacher;
    </select>

<!--    多对一-->
<!--    方法一  按结果嵌套查询-->
<!--    先将所有要查的字段全部查出来-->
    <select id="getTeacherS" resultMap="getTeacherSMap">
        select s.id sid,s.name sname,t.name tname,t.id tid
        from student s,teacher t
        where s.tid=t.id and t.id=#{tid};
    </select>
<!--    再将查出来的字段映射到老师对应的属性中去  collection表示集合   association表示对象-->
    <resultMap id="getTeacherSMap" type="Teacher">
        <result property="id" column="tid"/>
        <result property="name" column="tname"/>
        <collection property="students" ofType="Student">
            <result property="id" column="sid"/>
            <result property="name" column="sname"/>
            <result property="tid" column="tid"/>
        </collection>
    </resultMap>

<!--    方法2 子查询-->
<!--    先直接查老师的所有信息-->
    <select id="getTeacherS2" resultMap="getTeacherSMap2">
        select *
        from teacher
        where id=#{tid};
    </select>
<!--    子查询语句-->
    <select id="getStudentByTeacherId" resultType="Student">
        select *
        from student where tid=#{tid};
    </select>
<!--    对Teacher中的List<Student> students进行映射-->
    <resultMap id="getTeacherSMap2" type="Teacher">
<!--        这句话得加上  不然老师查出的id为0-->
        <result property="id" column="id"/>
<!--        Javatype是表示students属性的类型，oftype表示这个类型的泛型类型-->
        <collection property="students" javaType="ArrayList" ofType="Student" select="getStudentByTeacherId" column="id"/>
    </resultMap>
</mapper>