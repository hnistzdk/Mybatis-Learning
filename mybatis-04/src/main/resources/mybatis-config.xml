<?xml version="1.0" encoding="UTF8" ?>
<!--究极之恶心的  如果xml文件的第一行的 encoding=UTF-8就会报错   改成UTF8才不会报错-->
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<!--configuration为核心配置文件-->
<configuration>
<!--    引入外部配置文件-->
    <properties resource="db.properties">
<!--        在db.properties文件中不写以下两个熟悉也是可以的   只需在properties中加入property标签添加相应属性即可-->
<!--        <property name="username" value="root"/>-->
<!--        <property name="password" value="root"/>-->
<!--        对比可得出  若属性名相同,会优先使用外部配置文件db.properties中的属性-->

    </properties>
    
<!--    配置日志-->
    <settings>
<!--        标准日志工厂实现-->
        <setting name="logImpl" value="STDOUT_LOGGING"/>


<!--        LOG4J需要先导包 然后需要log4j.properties配置文件-->
<!--        <setting name="logImpl" value="LOG4J"/>-->

    </settings>
    

<!--   1 可以给实体类起别名-->
    <typeAliases>
        <typeAlias type="com.zdk.pojo.User" alias="User"/>
<!--       2 扫描实体类的包  它的默认别名就为这个类的类名的小写字母形式-->
<!--        实测  全小写或全大写都能识别出  官方建议 全小写-->
<!--        实体类较少时 建议使用起别名方式;实体类较少时，建议使用扫描包的方式-->
<!--还可通过 @Alias() 注解的方式给实体类起别名，但注解方式失败  原因未知！！！！！！！-->
        <package name="com.zdk.pojo.User"/>
    </typeAliases>

    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>

<!--    绑定接口-->
    <mappers>
        <mapper class="com.zdk.dao.UserMapper"></mapper>
    </mappers>

</configuration>